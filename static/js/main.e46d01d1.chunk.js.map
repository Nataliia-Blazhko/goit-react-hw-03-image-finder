{"version":3,"sources":["components/searchbar/Searchbar.js","components/imagegalleryitem/ImageGalleryItem.js","components/imagegallery/ImageGallery.js","components/button/Button.js","components/modal/Modal.js","apiService.js","App.js","index.js"],"names":["Searchbar","state","value","className","onSubmit","e","preventDefault","props","searchQuery","type","onChange","setState","target","this","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","onClick","showFullImage","largeImageUrl","src","webformatURL","alt","ImageGallery","list","map","item","openModal","id","largeImageURL","Button","nextPage","Modal","handleKeyDown","event","code","open","clickOverlayHandler","currentTarget","window","addEventListener","removeEventListener","createPortal","fullImage","document","querySelector","apiService","fetchImages","query","page","a","axios","get","App","images","isLoading","isModalOpen","fullImageUrl","toggleModal","scrollTo","setTimeout","top","documentElement","scrollHeight","behavior","updateImages","prevState","newQuery","then","response","data","hits","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e46d01d1.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nexport class Searchbar extends Component {\n  state = {\n    value: \"\",\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={(e)=>{\n          e.preventDefault()\n          this.props.searchQuery(this.state.value)\n        }\n          }>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={\n              (e)=>{\n                this.setState({value:e.target.value})\n              }\n            }\n            value={this.state.value}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus={true}\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nexport default class ImageGalleryItem extends Component {\n  render() {\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          onClick={this.props.showFullImage(this.props.largeImageUrl)}\n          src={this.props.webformatURL}\n          alt=\"\"\n          className=\"ImageGalleryItem-image\"\n        />\n      </li>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport ImageGalleryItem from \"../imagegalleryitem/ImageGalleryItem\";\n\nexport class ImageGallery extends Component {\n  render() {\n    return (\n      <ul className=\"ImageGallery\">\n        {this.props.list.map((item) => (\n          <ImageGalleryItem\n            showFullImage={this.props.showFullImage}\n            openModal={this.props.openModal}\n            key={item.id}\n            id={item.id}\n            webformatURL={item.webformatURL}\n            largeImageUrl={item.largeImageURL}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nexport class Button extends Component {\n  render() {\n    return (\n      <button\n        type=\"button\"\n        className={\"Button\"}\n        onClick={() => {\n          this.props.nextPage();\n        }}\n      >\n        Load more\n      </button>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nexport class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (event) => {\n    if (event.code === \"Escape\") {\n      this.props.open();\n    }\n  };\n\n  clickOverlayHandler = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.open();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.clickOverlayHandler}>\n        <div className=\"Modal\">\n          <img src={this.props.fullImage} alt=\"\" />\n        </div>\n      </div>,\n      document.querySelector(\"#modal-root\")\n    );\n  }\n}\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"21282104-2eb447408a79d7cba0630cd2c\";\n\nconst apiService = {\n  fetchImages: async (query, page) =>{\n    return axios\n      .get(\n        `${BASE_URL}?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`\n      )\n  }\n}\n\nexport default apiService\n\n\n\n   \n","import { Component } from \"react\";\nimport { Searchbar } from \"./components/searchbar/Searchbar\";\nimport { ImageGallery } from \"./components/imagegallery/ImageGallery\";\nimport { Button } from \"./components/button/Button\";\nimport { Modal } from \"./components/modal/Modal\";\nimport \"./styles.scss\";\nimport Loader from \"react-loader-spinner\";\nimport apiService from \"./apiService\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    isLoading: false,\n    query: \"\",\n    page: 1,\n    isModalOpen: false,\n    fullImageUrl: \"\",\n  };\n\n  componentDidMount() {\n    this.updateImages(this.state.query, true);\n  }\n\n  toggleModal = () => {\n    this.setState(({ isModalOpen }) => ({\n      isModalOpen: !isModalOpen,\n    }));\n  };\n\n  updateImages(query, newQuery = false) {\n    this.setState(\n      (prevState) => {\n        return {\n          query: query,\n          page: newQuery ? 1 : prevState.page + 1,\n          isLoading: true,\n        };\n      },\n      () => {\n        apiService.fetchImages(query, this.state.page).then((response) => {\n          this.setState((prevState) => {\n            if (newQuery) {\n              return {\n                images: [...response.data.hits],\n                isLoading: false,\n              };\n            } else {\n              return {\n                images: [...prevState.images, ...response.data.hits],\n                isLoading: false,\n              };\n            }\n          });\n        });\n      }\n    );\n    this.scrollTo();\n  }\n\n  scrollTo = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }, 750);\n  };\n\n  searchQuery = (query) => {\n    this.updateImages(query, true);\n  };\n\n  nextPage = () => {\n    this.updateImages(this.state.query);\n  };\n\n  showFullImage = (fullImage) => () => {\n    this.setState((prevState) => {\n      return {\n        fullImageUrl: fullImage,\n      };\n    });\n    this.toggleModal();\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar searchQuery={this.searchQuery} />\n        <ImageGallery\n          list={this.state.images}\n          showFullImage={this.showFullImage}\n          openModal={this.toggleModal}\n        />\n        {this.state.isModalOpen && (\n          <Modal open={this.toggleModal} fullImage={this.state.fullImageUrl} />\n        )}\n\n        {this.state.isLoading ? (\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} />\n        ) : (\n          <Button nextPage={this.nextPage} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}